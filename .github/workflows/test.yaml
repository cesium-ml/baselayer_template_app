name: Test Baselayer Template App

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Test Template App
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: template_app
          POSTGRES_PASSWORD: anything
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a
        # healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # NOTE: Keep this action in sync with baselayer

      - uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: true

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "latest"

      - uses: actions/setup-node@v5
        with:
          node-version: "22.x"

      - name: Set up pip cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}

      - name: Set up pnpm cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm-packages
          # Hash is not currently correctly calculated; why not?
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/package.json') }}

      - name: Install test dependencies
        run: |
          pip install -r baselayer/requirements.test.txt

      - name: Export Playwright version
        run: |
          PV=$(playwright --version | awk '{print $2}')
          echo "PLAYWRIGHT_VERSION=$PV" >> "$GITHUB_ENV"

      - name: Install Playwright Firefox
        run: |
          playwright install firefox

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget nodejs unzip nginx

          # if nginx is already installed, remove it
          sudo apt-get remove -y nginx nginx-common nginx-core nginx-full
          sudo apt-get purge -y nginx nginx-common nginx-core nginx-full

          # add the PPA repository with brotli support for nginx
          sudo add-apt-repository ppa:ondrej/nginx -y
          sudo apt-get update -y
          sudo apt-get install nginx libnginx-mod-http-brotli-static libnginx-mod-http-brotli-filter -y

          export NPM_PACKAGES="${HOME}/.npm-packages"
          export PATH=${NPM_PACKAGES}/bin:$PATH

      - name: Write configuration & build DB
        run: |
          cat << EOF > config.yaml
            database:
              database: template_app
              user: template_app
              host: localhost
              port: 5432
              password: anything
          EOF

          cat << EOF > test_config.yaml
            database:
              database: template_app_test
              user: template_app
              host: localhost
              port: 5432
              password: anything
            server:
              auth:
                debug_login: True
          EOF

          echo "localhost:5432:*:template_app:anything" > ~/.pgpass
          chmod 600 ~/.pgpass

          createdb -h localhost -U template_app template_app_test
          psql -U template_app -h localhost -c "GRANT ALL PRIVILEGES ON DATABASE template_app_test TO template_app;" template_app_test

          make db_init

      - name: Test template app
        run: |
          make test

      - name: Lint all
        run: |
          git reset --hard HEAD
          pip install pre-commit
          pre-commit run -a

      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: logs
          path: log
